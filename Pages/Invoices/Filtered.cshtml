@page
@model InvoiceManager.Pages.Invoices.FilteredModel

@{
    ViewData["Title"] = Resources.ApplicationTexts.FilteredTitle;
}

<h2>Wynik filtrowania na dzień @Model.FilterDate.ToShortDateString()</h2>

<table class="table">
    <thead>
    <tr>
        @if (User.IsInRole(Resources.ApplicationTexts.InvoiceAccountantRole) || User.IsInRole(Resources.ApplicationTexts.InvoiceAdministratorsRole))
        {
            <th>
                @Html.DisplayNameFor(model => model.Invoice[0].UserCompanyName)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.Invoice[0].CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Invoice[0].IssueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Invoice[0].Amount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Invoice[0].DueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Invoice[0].Status)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Invoice)
    {
        <tr>
            @if (User.IsInRole(Resources.ApplicationTexts.InvoiceAccountantRole) || User.IsInRole(Resources.ApplicationTexts.InvoiceAdministratorsRole))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.UserCompanyName)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IssueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>

            <td>
                @if ((await AuthorizationService.AuthorizeAsync(
                    User, item,
                    InvoiceOperations.Update)).Succeeded)
                {
                    <a asp-page="./Edit" asp-route-id="@item.InvoiceId">@Resources.ApplicationTexts.Edit</a>
                    <text> | </text>
                }

                <a asp-page="./Details" asp-route-id="@item.InvoiceId">@Resources.ApplicationTexts.Details</a>

                @if ((await AuthorizationService.AuthorizeAsync(
                    User, item,
                    InvoiceOperations.Delete)).Succeeded)
                {
                    <text> | </text>
                    <a asp-page="./Delete" asp-route-id="@item.InvoiceId">@Resources.ApplicationTexts.Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<a asp-page="./Index"><button class="btn btn-primary">@Resources.ApplicationTexts.ReturnToViewAllButton</button></a>